matrix <- matrix(c(1,-1,0,5,2,0,1,4,3,1,-2,-2,4,3,1,-3))
matrix
matrix <- matrix(c(1,-1,0,5,2,0,1,4,3,1,-2,-2,4,3,1,-3), nrows = 4)
matrix <- matrix(c(1,-1,0,5,2,0,1,4,3,1,-2,-2,4,3,1,-3), nrow = 4
)
matrix <- matrix(c(1,-1,0,5,2,0,1,4,3,1,-2,-2,4,3,1,-3), nrow = 4)
matrix
library(Matrix)
rankMatrix(matrix, method = tolNorm2)
rankMatrix(matrix, method = "tolNorm2")
rankMatrix(matrix, method = "qr")
setwd("~/GitHub/605/assign")
Rank <- function(matrix) { #reusing assignment 1 code to try it manually
rank <- 0
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
i < i + 1
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix[, 4])
}
Rank(matrix)
Rank <- function(matrix) { #reusing assignment 1 code to try it manually
rank <- 0
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
i < i + 1
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(i)
}
Rank(matrix)
Rank <- function(matrix) { #reusing assignment 1 code to try it manually
rank <- 0
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
i < i + 1
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
i <- i + 1
}
}
return(i)
}
Rank(matrix)
Rank <- function(matrix) { #reusing assignment 1 code to try it manually
rank <- 1
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
i < i + 1
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
i <- i + 1
}
}
return(i)
}
Rank(matrix)
Rank <- function(matrix) { #reusing assignment 1 code to try it manually
i <- 1
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
i < i + 1
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
i <- i + 1
}
}
return(i)
}
Rank(matrix)
Rank <- function(matrix) { #reusing assignment 1 code to try it manually
rank <- 0
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
rank <- rank + 1
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
rank <- rank + 1
}
}
return(rank)
}
Rank(matrix)
Rank <- function(matrix) { #reuse some old code to try this manually
if (matrix[1,1] == 0) {
if (matrix[4,1] != 0) {
third <- -1 * matrix[4,]
matrix[4,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:4) {
for (j in i:4) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 4:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix[, 4])
}
Rank(matrix)
matrix
matrix <- matrix(c(1,-1,0,5,2,0,1,4,3,1,-2,-2,4,3,1,-3), nrow = 4)
rankMatrix(matrix, method = "qr") #using build in
Rank <- function(matrix) { #reuse some old code to try this manually
if (matrix[1,1] == 0) {
if (matrix[4,1] != 0) {
third <- -1 * matrix[4,]
matrix[4,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:4) {
for (j in i:4) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 4:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix)
}
Rank(matrix)
rankMatrix(matrix, method = "qr")[1] #using build in
rankMatrix(matrix, method = "qr") #using build in
matrix(c(1,0,0,0,2,2,0,0,3,4,-4,0,4,7,-5/2,9/8), nrow = 4)
matrix(c(1,0,0,2,0,0,1,0,0), nrow = 3)
matrix <- matrix(c(1,0,0,2,0,0,1,0,0), nrow = 3);matrix
rankMatrix(matrix, method = "qr")[1]
setwd("~/GitHub/609/hw")
plot(s,e)
s <- c(5,10,20,30,40,50,60,70,80,90,100)
e <- c(0,19,57,94,134,173,216,256,297,343,390)
plot(s,e)
abline(e ~ s)
plot(s,e)
abline(e ~ s)
abline(e)
plot(s,e)
abline(s~e)
abline(lm(s~e))
abline(lm(e~s))
s <- c(5,10,20,30,40,50,60,70,80,90,100)
e <- c(0,19,57,94,134,173,216,256,297,343,390)
plot(s,e)
abline(lm(e~s))
lm(e~s)
x <- c(1,2.3,3.7,4.2,6.1,7)
y <- c(3.6,3,3.2,5.1,5.3,6.8)
x <- c(1,2.3,3.7,4.2,6.1,7)
y <- c(3.6,3,3.2,5.1,5.3,6.8)
plot(x,y)
abline(lm(y~x))
lm(y~x)
lm(y~x)[2]
lm(y~x)[1]
lm(y~x)[1,1]
lm(y~x)[1][1]
x <- lm(y,x)
x <- lm(y~x)
x
x <- c(1,2.3,3.7,4.2,6.1,7)
y <- c(3.6,3,3.2,5.1,5.3,6.8)
plot(x,y)
abline(lm(y~x))
body <- c("mercury","venus", "earth", "mars", "jupiter", "saturn", "uranus", "neptune")
period <- c(7.6*10^6)
period <- c(7.6*10^6,1.94*10^7,3.16*10^7,5.94*10^7,3.74*10^8,9.35*10^8,2.64*10^9,5.22*10^9)
period
distance <- c(5.79*10^10,1.08*10^11,1.5*10^11,2.28*10^11,7.79*10^11,1.43*10^12,2.87*10^12,4.5*10^12)
planets <- cbind(body, period, distance)
planets
plot(period, distance)
plot(distance,period)
x <- c(1,2.3,3.7,4.2,6.1,7)
y <- c(3.6,3,3.2,5.1,5.3,6.8)
sum(lm(y~x)[2])
lm(y~x)[2]
rowsum(lm(y~x)[2])
lm(y~x)$residuals
lm(y~x)$residuals[1]
lm(y~x)$residuals[1:6]
lm(y~x)$residuals[]
sum(lm(y~x)$residuals[])
plot(distance,period)
plot(period, distance)
top <- distance^(3/2) * period
top <- sum(distance^(3/2) * period)
bot <- sum(distance^((3/2)*2))
a <- top/bot
period
plot(distance,period)
lm(period~distance)
library(curve)
install.packages("curve")
curve(ax^(3/2))
curve(x^(3/2))
curve(a*x^(3/2))
plot(distance,period)
abline(curve(a*x^(3/2)))
plot(distance,period)
top <- sum((distance^(3/2)) * period)
3/2
1.5*1.5
bot <- sum(distance^(2.25))
a <- top/bot
curve(a*x^(3/2))
a <- top/bot;a
l <- c(14.5,12.5,17.25,14.5,12.625,17.75,14.125,12.625)
w <- c(27,17,41,26,17,49,23,16)
l <- c(14.5,12.5,17.25,14.5,12.625,17.75,14.125,12.625)
w <- c(27,17,41,26,17,49,23,16)
g <- c(9.75,8.375,11,9.75,8.5,12.5,9,8.5)
top <- sum(l^3 * w)
top <- sum((distance^(3/2)) * period)
bot <- sum(distance^(1.5*2))
body <- c("mercury","venus", "earth", "mars", "jupiter", "saturn", "uranus", "neptune")
period <- c(7.6*10^6,1.94*10^7,3.16*10^7,5.94*10^7,3.74*10^8,9.35*10^8,2.64*10^9,5.22*10^9)
distance <- c(5.79*10^10,1.08*10^11,1.5*10^11,2.28*10^11,7.79*10^11,1.43*10^12,2.87*10^12,4.5*10^12)
planets <- cbind(body, period, distance)
plot(distance,period)
top <- sum((distance^(3/2)) * period)
bot <- sum(distance^(1.5*2))
a <- top/bot;a
1.5*2
top <- sum(distance^1.5 * period)
bot <- sum(distance^(1.5*2))
a <- top/bot;a
l <- c(14.5,12.5,17.25,14.5,12.625,17.75,14.125,12.625)
w <- c(27,17,41,26,17,49,23,16)
g <- c(9.75,8.375,11,9.75,8.5,12.5,9,8.5)
top <- sum(l^3 * w)
bot <- sum(l^6)
a <- top/bot
a <- top/bot;a
k <- top/bot;k
top <- sum(l * g^2 * w)
bot <- sum(l*g^4)
k <- top/bot;k
lm(w ~ l^3)
d <- w - l^3
top <- sum(l^3 * w)
bot <- sum(l^6)
k <- top/bot;k
d <- w - k*l^3
d <- sum(w - k*l^3)
d <- sum(w - k*l^3);d
d <- sum(w - (k*l*g^2);d #deviation
d <- sum(w - (k*l^3);d #deviation
d <- sum(w - (k*l^3);d #deviation
d <- sum(w - (k*l^3));d #deviation
top <- sum(l * g^2 * w)
bot <- sum(l*g^4)
k <- top/bot;k #fit
d <- sum(w - (k*l*g^2));d #deviation
k*l*g^2
g^2
g^2 * k
top <- sum(l^3 * w)
bot <- sum(l^6)
k <- top/bot;k #fit
d <- sum(w - (k*l^3));d #deviation
top <- sum(l * w * g^2)
bot <- sum(l*g^4)
k <- top/bot;k #fit
d <- sum(w - (k*l*g^2));d #deviation
bot <- sum(l*(g^4)
bot <- sum(l*(g^4))
k <- top/bot;k #fit
bot <- sum(l*(g^4))
k <- top/bot;k #fit
top <- sum(w * g^2)
bot <- sum(l*(g^4))
k <- top/bot;k #fit
bot <- sum((g^4))
k <- top/bot;k #fit
top <- sum(w * g^2)
bot <- sum((g^4))
k <- top/bot;k #fit
top <- sum(l^2 * w * g^2)
bot <- sum(l * (g^4))
k <- top/bot;k #fit
top <- sum(w * (l*g)^2)
bot <- sum(((l*g)^4))
k <- top/bot;k #fit
d <- sum(w - (k*l*g^2));d #deviation
p <- c(341948,1092759,5491,49375,1340000,365,2500,78200,867023,14000,23700,70700,304500,138000,2602000)
v <- c(4.81,5.88,3.31,4.90,5.62,2.76,2.27,3.85,5.21,3.70,3.27,4.31,4.42,4.39,5.05)
plot(p,v)
x <- c(17,19,20,22,23,25,31,32,33,36,37,38,39,41)
y <- c(19,25,32,51,57,71,141,123,187,192,205,252,248,294)
plot(x,y)
plot(x,y^3)
plot(x,(y^3)/10)
plot(x,y^3)
plot(x,y)
plot(x,y^3)
plot(x^3,y)
plot(x,y)
l <- c(12.5,12.625,14.125,14.5,17.25,17.75)
w <- c(17,16.5,23,26.5,41,49)
plot(l,w)
delta1 <- diff(w)/diff(l)
delta1 <- diff(w)/diff(l)
delta2 <- diff(delta1)
all <- cbind(l,w,delta1,delta2)
all
delta1 <- NA, (w)/diff(l)
delta1 <- c(NA, (w)/diff(l))
delta2 <- diff(delta1)
all <- cbind(l,w,delta1,delta2)
all
delta1 <- diff(w)/diff(l)
delta2 <- diff(delta1)
all <- cbind(l,w,delta1,delta2)
all
year <- c(1885,1917,1919,1932,1958,1963,1968,1971,1974,1975,1976,1978,1981,1981,1985,1988,1991,1995,1999,2001,2002,2006,2007,2008,2009,2012)
price <- c(0.02,0.03,.02,.03,.04,.05,.06,.08,.10,.13,.13,.15,.18,.20,.22,.25,.29,.32,.33,.34,.37,.39,.41,.42,.44,.45)
year <- c(1885,1917,1919,1932,1958,1963,1968,1971,1974,1975,1976,1978,1981,1981,1985,1988,1991,1995,1999,2001,2002,2006,2007,2008,2009,2012)
price <- c(0.02,0.03,.02,.03,.04,.05,.06,.08,.10,.13,.13,.15,.18,.20,.22,.25,.29,.32,.33,.34,.37,.39,.41,.42,.44,.45)
plot(year,price)
lm(price ~ year)
plot(year,price, type = "b")
year <- c(1968,1971,1974,1975,1976,1978,1981,1981,1985,1988,1991,1995,1999,2001,2002,2006,2007,2008,2009,2012)
price <- c(.06,.08,.10,.13,.13,.15,.18,.20,.22,.25,.29,.32,.33,.34,.37,.39,.41,.42,.44,.45)
plot(year,price, type = "b")
fit(lm(price~year))
fit <- abline(lm(price~year))
fit <- lm(price~year)
plot(year,price, type = "b")
fit <- lm(price~year)
abline(fit)
plot(year,price)
fit <- lm(price~year)
abline(fit)
fit
2010+17.515820
price2010 <- 2027.516/.008933;price2010
price2010 = .008933(2010) - 17.515820;price2010
price2010 = .008933*2010 - 17.515820;price2010
price2010 <- .008933*2010 - 17.515820;price2010
1+17.515820
year1 <- 18.51582/.008933
year1 <- 18.51582/.008933;year1
