library(rvest)
library(psych)
# stripping html tags
stripHtml <- function(htmlString) {
return(gsub("<.*?>", "", htmlString))
}
# strip spaces and line breaks
stripOther <- function(htmlString) {
htmlString <- gsub("\n", "", htmlString)
htmlString <- gsub(" ", "", htmlString)
return(htmlString)
}
# maplist
html <- read_html("http://195.93.242.155/~quake2/quake2/jump/_html/maps.html")
maplist <- html_nodes(html, "div")
maplist <- stripHtml(maplist)
maplist <- stripOther(maplist)
maplist <- data.frame(matrix(maplist, ncol = 5, byrow = TRUE))
maplist <- maplist[-1,]
maplist <- data.frame(maplist$X2)
maplist
length <- length(maplist[[1]])
prefix <- "http://195.93.242.155/~quake2/quake2/jump/_html/"
suffix <- ".html"
usermaps <- data.frame(NULL)
i <- 1
html <- read_html(paste(prefix, maplist[i,], suffix, sep = ""))
mapfile <- html_nodes(html, "div")
mapfile <- stripHtml(mapfile)
mapfile <- stripOther(mapfile)
mapfile
mapfile <- data.frame(matrix(mapfile, ncol = 5, byrow = TRUE))
mapfile
library(rvest)
library(psych)
# stripping html tags
stripHtml <- function(htmlString) {
return(gsub("<.*?>", "", htmlString))
}
# strip spaces and line breaks
stripOther <- function(htmlString) {
htmlString <- gsub("\n", "", htmlString)
htmlString <- gsub(" ", "", htmlString)
return(htmlString)
}
# maplist
html <- read_html("http://195.93.242.155/~quake2/quake2/jump/_html/maps.html")
maplist <- html_nodes(html, "div")
maplist <- stripHtml(maplist)
maplist <- stripOther(maplist)
maplist <- data.frame(matrix(maplist, ncol = 5, byrow = TRUE))
maplist <- maplist[-1,]
maplist <- data.frame(maplist$X2)
# map loop
length <- length(maplist[[1]])
prefix <- "http://195.93.242.155/~quake2/quake2/jump/_html/"
suffix <- ".html"
usermaps <- data.frame(NULL)
i <- 1
while (i < length + 1) {
if (grepl("#", maplist[i,])) {}
else {
html <- read_html(paste(prefix, maplist[i,], suffix, sep = ""))
mapfile <- html_nodes(html, "div")
mapfile <- stripHtml(mapfile)
mapfile <- stripOther(mapfile)
mapfile <- data.frame(matrix(mapfile, ncol = 5, byrow = TRUE))
mapfile <- mapfile[-1, -c(4)]
mapfile <- cbind(mapfile, maplist[i,])
usermaps <- rbind(usermaps, mapfile)
}
print(paste(i, "/", length, sep = ""))
i <- i + 1
}
usermaps
library(rvest)
library(psych)
# stripping html tags
stripHtml <- function(htmlString) {
return(gsub("<.*?>", "", htmlString))
}
# strip spaces and line breaks
stripOther <- function(htmlString) {
htmlString <- gsub("\n", "", htmlString)
htmlString <- gsub(" ", "", htmlString)
return(htmlString)
}
# maplist
html <- read_html("http://195.93.242.155/~quake2/quake2/jump/_html/maps.html")
maplist <- html_nodes(html, "div")
maplist <- stripHtml(maplist)
maplist <- stripOther(maplist)
maplist <- data.frame(matrix(maplist, ncol = 5, byrow = TRUE))
maplist <- maplist[-1,]
maplist <- data.frame(maplist$X2)
# map loop
length <- length(maplist[[1]])
prefix <- "http://195.93.242.155/~quake2/quake2/jump/_html/"
suffix <- ".html"
usermaps <- data.frame(NULL)
i <- 1
while (i < length + 1) {
if (grepl("#", maplist[i,])) {}
else {
html <- read_html(paste(prefix, maplist[i,], suffix, sep = ""))
mapfile <- html_nodes(html, "div")
mapfile <- stripHtml(mapfile)
mapfile <- stripOther(mapfile)
mapfile <- data.frame(matrix(mapfile, ncol = 5, byrow = TRUE))
mapfile <- mapfile[-1, -c(4)]
mapfile <- cbind(mapfile, maplist[i,])
usermaps <- rbind(usermaps, mapfile)
}
print(paste(i, "/", length, sep = ""))
i <- i + 1
}
colnames(usermaps) <- c("pos", "name", "date", "time", "map")
write.csv(usermaps, file = "maptimes.csv")
ace <- subset(usermaps, name == "Ace")
write.csv(ace, file = "ace_may16.csv")
first <- subset(usermaps, pos == 1)
write.csv(first, file = "first.csv")
install.packages("pracma")
library(pracma)
f <- function(x) 1/(1-x)
p <- taylor(f, 0, n = 3)
p
atoa <- c(88.3,40.7,36.3,27.3,36.8,91.7,67.3,7,45.2,23.3,98.8,90.1,17.2,23.7,97.4,32.4,87.8,69.8,62.6,99.7,20.6,73.1,21.6,6,45.3,76.6,73.2,27.3,87.6,87.2)
d1 <- max((1:length(atoa/100)) - 1 / length(atoa/100) - (atoa/100))
d2 <- max((atoa/100) - ((1:length(atoa/100)) - 1) / length(atoa/100))
d1 <- max((1:length(atoa/100)) - 1 / (length(atoa/100) - (atoa/100)))
d1 <- max((1:length((atoa/100)))/length((atoa/100)) - (atoa/100))
times <- c(18.9,22,19.4,22.1,19.8,21.9,20.2)
mu <- 22.5
t2 <- t.test(times, mu = mu)
t2
t2[1]
t2[1][1]
t2[1,1]
t2[1]$statistic
t2[1]$statistic["t"]
t2[1]$statistic[1]
qt(.025,length(times)-1)
delta <- abs(mean(times)-mu)/sd(times)
delta <- 1- (abs(mean(times)-mu)/sd(times))
delta <- (abs(mean(times)-mu)/sd(times))
1-
delta <- 1- (abs(mean(times)-mu)/sd(times))
delta <- 1- (abs(mean(times)-mu)/sd(times))
ages <- c(62:70)
modifiers <- c(.7,.75,.8,.867,.933,1,1.08,1.16,1.24)
ss <- data.frame(cbind(ages, modifiers));ss
print ss
print (ss)
table(ss)
smma <- ddply(ss2, ~ages, summarise, mean=mean(total))
ages <- c(rep(62:70,each=5))
modifiers <- c(rep(c(.7,.75,.8,.867,.933,1,1.08,1.16,1.24),each=5))
death <- rep(c(70,75,80,85,90), 9)
death_chance <- rep(c(.92,.80,.63,.41,.2), 9)
ss2 <- data.frame(cbind(ages,modifiers,death,death_chance))
ss2$monthly <- 1000*ss2$modifiers
ss2$yearly <- ss2$monthly*12
ss2$remaining <- ss2$death-ss2$ages
ss2$total <- ss2$yearly*ss2$remaining;ss2
library(plyr)
smma <- ddply(ss2, ~ages, summarise, mean=mean(total));smma
qplot(smma)
ages <- c(rep(62:70,each=5))
modifiers <- c(rep(c(.7,.75,.8,.867,.933,1,1.08,1.16,1.24),each=5))
death <- rep(c(70,75,80,85,90), 9)
death_chance <- rep(c(.92,.80,.63,.41,.2), 9)
ss2 <- data.frame(cbind(ages,modifiers,death,death_chance))
ss2$monthly <- 1000*ss2$modifiers
ss2$yearly <- ss2$monthly*12
ss2$remaining <- ss2$death-ss2$ages
ss2$total <- ss2$yearly*ss2$remaining;ss2
library(plyr)
library(ggplot2)
setwd("~/GitHub/609/proj")
rep(62:70,each=5)
ages <- c(rep(62:70,each=5))
ages
modifiers <- c(rep(c(.7,.75,.8,.867,.933,1,1.08,1.16,1.24),each=5))
death <- rep(c(70,75,80,85,90), 9)
death_chance <- rep(c(.92,.80,.63,.41,.2), 9)
ss2 <- data.frame(cbind(ages,modifiers,death,death_chance))
ss2$monthly <- 1000*ss2$modifiers
ss2$yearly <- ss2$monthly*12
ages <- c(rep(62:70,each=5))
modifiers <- c(rep(c(.7,.75,.8,.867,.933,1,1.08,1.16,1.24),each=5))
death <- rep(c(70,75,80,85,90), 9)
death_chance <- rep(c(.92,.80,.63,.41,.2), 9)
ss2 <- data.frame(cbind(ages,modifiers,death,death_chance))
ss2$monthly <- 1000*ss2$modifiers
ss2$yearly <- ss2$monthly*12
ss2$remaining <- ss2$death-ss2$ages
ss2$total <- ss2$yearly*ss2$remaining;ss2
library(plyr)
ddply(ss2, ~ages, summarise, mean=mean(total))
